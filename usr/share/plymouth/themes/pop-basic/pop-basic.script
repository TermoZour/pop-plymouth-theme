cursor.image = Image("cursor.png").Scale(2, 12);
cursor.sprite = Sprite(cursor.image);
cursor.opacity_angle = 0;

message_sprite = Sprite();

xcenter = Window.GetX() + Window.GetWidth() / 2;
ycenter = Window.GetY() + Window.GetHeight() / 2;

fun refresh_callback () {
  if (status == "normal") {
    cursor.sprite.SetOpacity (0);
    if (Plymouth.GetMode() == "shutdown") {
      Window.SetBackgroundTopColor(0.22, 0.21, 0.2);
      Window.SetBackgroundBottomColor(0.22, 0.21, 0.2);
    }
  } else {
    if (status == "password") {
      cursor.opacity_angle += ((2 * 3.14) / 50) * 0.5;  # 0.5 HZ
      opacity = (Math.Cos(cursor.opacity_angle) + 1) / 2;
      opacity *= 1;
      cursor.sprite.SetOpacity (opacity);
    }
  }
}

Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup () {
  Window.SetBackgroundTopColor(0.22, 0.21, 0.2);
  Window.SetBackgroundBottomColor(0.22, 0.21, 0.2);

  local.lock;
  local.entry;
  local.cursor;
  local.arrow;

  lock.image = Image("lock.png").Scale(48, 48);
  entry.image = Image("entry.png").Scale(400, 30);
  arrow.image = Image("return.png").Scale(16, 16);

  column_padding = 16;
  row_padding = 32;
  height = entry.image.GetHeight() + row_padding;
  ystart = ycenter + (height / 2);

  lock.sprite = Sprite(lock.image);
  lock.x = xcenter - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
  lock.y = ystart - lock.image.GetHeight() / 2;
  lock.sprite.SetPosition(lock.x, lock.y, 1000);

  entry.sprite = Sprite(entry.image);
  entry.x = lock.x + column_padding + lock.image.GetWidth();
  entry.y = ystart - entry.image.GetHeight() / 2;
  entry.sprite.SetPosition(entry.x, entry.y, 1000);

  arrow.sprite = Sprite(arrow.image);
  arrow.x = entry.x + entry.image.GetWidth() - arrow.image.GetWidth() - 2;
  arrow.y = ystart - 4 - arrow.image.GetHeight() / 2;
  arrow.sprite.SetPosition(arrow.x, arrow.y, 1000);

  global.dialog.height = height;
  global.dialog.lock = lock;
  global.dialog.entry = entry;
  global.dialog.arrow = arrow;
  global.dialog.bullet_image = Image("bullet.png");
  dialog_opacity (1);
}

fun dialog_opacity (opacity) {
  dialog.lock.sprite.SetOpacity (opacity);
  dialog.entry.sprite.SetOpacity (opacity);
  dialog.arrow.sprite.SetOpacity (opacity);
  cursor.sprite.SetOpacity (opacity);
  for (index = 0; dialog.bullet[index]; index++) {
    dialog.bullet[index].sprite.SetOpacity (opacity);
  }
}

fun display_normal_callback () {
  global.status = "normal";
  if (global.dialog)
    dialog_opacity (0);
}

fun display_password_callback (prompt, bullets) {
  global.status = "password";
  if (!global.dialog)
    dialog_setup();
  else
    dialog_opacity(1);

    yvalue = dialog.entry.y + dialog.entry.image.GetHeight() / 2
      - dialog.bullet_image.GetHeight() / 2
      - 2;
    zvalue = dialog.entry.z + 1;

    oindex = 0;
    for (index = 0; dialog.bullet[index] || index < bullets && index < 31; index++) {
        if (!dialog.bullet[index]) {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, yvalue, zvalue);
        }

        if (index < bullets) {
          oindex = index + 1;
          dialog.bullet[index].sprite.SetOpacity(1);
        } else {
          dialog.bullet[index].sprite.SetOpacity(0);
        }
    }

    xvalue = dialog.entry.x + oindex * dialog.bullet_image.GetWidth() + 4;
    cursor.sprite.SetPosition(xvalue, yvalue, zvalue);
    display_message_callback(prompt);
}

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Message --------------------------------

fun display_message_callback (text) {
  text_image = Image.Text(text, 1, 1, 1);
  message_sprite.SetImage(text_image);
  message_sprite.SetPosition(
    xcenter - text_image.GetWidth() / 2,
    ycenter + dialog.height / 2 + 30,
    10000
  );
}

fun hide_message_callback (text) {
  message_sprite = Sprite();
  message_sprite.SetPosition(10, 10, 10000);
}

Plymouth.SetDisplayMessageFunction (display_message_callback);
Plymouth.SetHideMessageFunction (hide_message_callback);
